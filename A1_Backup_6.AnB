Protocol: SSO

#User can authenticate webserver

Types:
Agent U,W,N;
Number Payload,X,Y,g,NA,Sid,NB,PMS,PA,PB;
Function prf,clientK,serverK,hash,pms;

Knowledge:
#User
U: U, W, N, g, pk(W), pk(U), inv(pk(U)), pms(U, W), hash, prf, clientK,serverK;
#Website
W: U, W, N, g, pk(N), inv(pk(W)), pk(W), hash, prf, serverK,clientK;
#Nemid server
#N: U, W, N, sk(W, N), pw(U, N), sf(U, N), mac, inv(pk(N)), pk(N), pk(N); 
 
Actions:
    U->W: U, NA, Sid, PA
    
    W->U: NB, Sid, PB

    U->W: PK, { PMS } pk(W),
	  { hash(NB, W, PMS ) } inv(PK),
	  {| hash(PMS, NA, NB), Payload, U, W, NA, NB, Sid, PA, PB, PMS |} clientK(NA, NB, prf(PMS, NA, NB))

    W->U: {| hash(prf(PMS,NA,NB)), U, W, NA, NB, Sid, PA, PB, PMS |} serverK(NA, NB, prf(PMS,NA,NB))

	
    #Communication after establishing a secure channel between user and website
    #U->W: {| U, W, pw(U, N) |} sk(U, W)
    
    #W->N: {| W, N, pw(U, N) |} sk(W, N)

    #N->W: {| N, W, sf(U, N) |} sk(W, N)

    #W->U: {| W, U, sf(U, N) |} sk(U, W)

    #U->W: {| U, W, mac(sf(U, N)) |} sk(U, W)

    #W->N: {| W, N, mac(sf(U, N)) |} sk(W, N)

    #N->W: {| N, W, U, Valid |} sk(W, N)

Goals:
#mac(sf(U, N)) secret between U, W
U authenticates W on prf(PMS, NA, NB)
#prf(PMS, NA, NB) secret between U,W

#W authenticates U on Payload

    



