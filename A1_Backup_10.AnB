Protocol: SSO

#User can authenticate webserver
#User is pseudonym agent 

Types:
Agent U,W,n;
Number NA,Sid,NB,PMS,PA,PB,g,X,Y,Payload,P2;
Function prf,clientK,serverK,hash;

Knowledge:
#User
U: U, W, n, pk(W), pk(n), pk(U), inv(pk(U)), hash, prf, clientK,serverK;
#Website
W: U, W, n, pk(n), inv(pk(W)), pk(W), hash, prf, serverK,clientK,g;
#Nemid server
n: U, W, n, inv(pk(n)), pk(n), pk(W),g; 
 
Actions:
    #Establish secure communication between User and website
    U->W: U, NA, Sid, PA
    
    W->U: NB, Sid, PB

    U->W: pk(U), { PMS } pk(W),
	  { hash(NB, W, PMS ) } inv(pk(U)),
	  {| hash(prf(PMS, NA, NB), U, W, NA, NB, Sid, PA, PB, PMS) |} clientK(NA, NB, prf(PMS, NA, NB))

    W->U: {| hash(prf(PMS,NA,NB), U, W, NA, NB, Sid, PA, PB, PMS) |} serverK(NA, NB, prf(PMS,NA,NB))

    #User website communication
    #U->W: {| U, { pw(U,N) } pk(N) |} clientK(NA, NB, prf(PMS, NA, NB))
    U->W: {| hash(prf(PMS, NA, NB), U, W, NA, NB, Sid, PA, PB, PMS, P2) |} clientK(NA, NB, prf(PMS, NA, NB))

    #setup secure channel between website and nemid
    W->n: { W, n, exp(g, X) } inv(pk(W))

    n->W: { n, W, exp(g, Y) } inv(pk(n))

    #W->N: {| { U, { pw(U,N) } pk(N), W } inv(pk(W)) |} exp(exp(g,Y),X)
    W->n: {| Payload |} exp(exp(g,X),Y)
    
    #send second factor auth code
    #N->W: {|  N, W, U |} exp(exp(g,X),Y)

   # W->U: {| hash(prf(PMS,NA,NB)), U, W, NA, NB, Sid, PA, PB, PMS |} serverK(NA, NB, prf(PMS,NA,NB))

    #U->W: {| hash(PMS, NA, NB), U, W, NA, NB, Sid, PA, PB, PMS, 
	#  { mac(card(U)) } pk(N) |} clientK(NA, NB, prf(PMS, NA, NB))

    #W->N: {| { { mac(card(U)) } pk(N) } inv(pk(W)) |} exp(exp(g,X),Y)

    #Communication after establishing a secure channel between user and website
    #U->W: {| U, W, pw(U, N) |} sk(U, W)
    
    #W->N: {| W, N, pw(U, N) |} sk(W, N)

    #N->W: {| N, W, sf(U, N) |} sk(W, N)

    #W->U: {| W, U, sf(U, N) |} sk(U, W)

    #U->W: {| U, W, mac(sf(U, N)) |} sk(U, W)

    #W->N: {| W, N, mac(sf(U, N)) |} sk(W, N)

    #N->W: {| N, W, U, Valid |} sk(W, N)

Goals:
#mac(sf(U, N)) secret between U, W
U authenticates W on prf(PMS, NA, NB)
#N authenticates U on mac(card(U), Code)
exp(exp(g,X), Y) secret between N,W
#W authenticates N on cprNumber
#N authenticates W on pw(cprNumber,N)
#prf(PMS, NA, NB) secret between U,W

#W authenticates U on Payload

    












