Protocol: SSO

#User can authenticate webserver
#User is pseudonym agent 

Types:
Agent W,N;
Number g,X,Y,Payload; 

Knowledge:
#User
#U: U, W, N, pk(W), pk(N), pk(U), inv(pk(U)), hash, prf, clientK,serverK, pw(U,N),mac,card;
#Website
W: W, N, pk(N), inv(pk(W)), pk(W) ,g;
#Nemid server
N: W, N, inv(pk(N)), pk(N), pk(W),g; 
 
Actions:
    #Establish secure communication between User and website

    #setup secure channel between website and nemid
    W->N: { W, N, exp(g, X) } inv(pk(W))

    N->W: { N, W, exp(g, Y) } inv(pk(N))

    W->N: {| { Payload } inv(pk(W)) |} exp(exp(g,Y),X)
    
    #send second factor auth code
   
    #Communication after establishing a secure channel between user and website
    #U->W: {| U, W, pw(U, N) |} sk(U, W)
    
    #W->N: {| W, N, pw(U, N) |} sk(W, N)

    #N->W: {| N, W, sf(U, N) |} sk(W, N)

    #W->U: {| W, U, sf(U, N) |} sk(U, W)

    #U->W: {| U, W, mac(sf(U, N)) |} sk(U, W)

    #W->N: {| W, N, mac(sf(U, N)) |} sk(W, N)

    #N->W: {| N, W, U, Valid |} sk(W, N)

Goals:
#mac(sf(U, N)) secret between U, W
#U authenticates W on prf(PMS, NA, NB)
#N authenticates U on mac(card(U), Code)
exp(exp(g,X), Y) secret between N,W
Payload secret between N,W
#W authenticates N on cprNumber
#N authenticates W on pw(cprNumber,N)
#prf(PMS, NA, NB) secret between U,W

#W authenticates U on Payload

    












